buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://dl.bintray.com/drummer-aidan/maven' }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "am.gsoft.authjnjelu"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled = true
        resConfigs "auto"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.enableCrashlytics = true
//            signingConfig signingConfigs.release
            buildConfigField "String", "APP_ID", property('prodAppID')
            buildConfigField "String", "AUTH_KEY", property('prodAuthKey')
            buildConfigField "String", "AUTH_SECRET", property('prodAuthSecret')
            buildConfigField "String", "ACCOUNT_KEY", property('prodAccountKey')
            buildConfigField "String", "TWITTER_KEY", prodTwitterDigitsConsumerKey
            buildConfigField "String", "TWITTER_SECRET", prodTwitterDigitsConsumerSecret
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", property('prodFirebaseAuthProjectId')
            resValue "string", "twitterDigitsApiKey", property('prodTwittedDigitsApiKey')
            resValue "string", "facebookAppId", property('prodFacebookAppID')
            resValue "string", "sender_id", property('prodPushRegistrationAppID')
        }

        debug {
            debuggable true
            ext.enableCrashlytics = false
            versionNameSuffix ' (debug)'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ACCOUNT_KEY", property('devAccountKey')
            buildConfigField "String", "TWITTER_KEY", property('devTwitterDigitsConsumerKey')
            buildConfigField "String", "TWITTER_SECRET", property('devTwitterDigitsConsumerSecret')
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", property('devFirebaseAuthProjectId')
            resValue "string", "twitterDigitsApiKey", property('devTwittedDigitsApiKey')
            resValue "string", "facebookAppId", property('devFacebookAppID')
            resValue "string", "sender_id", property('devPushRegistrationAppID')
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        abortOnError false
    }

    productFlavors {

        dev {
            buildConfigField "String", "APP_ID", devAppID
            buildConfigField "String", "AUTH_KEY", devAuthKey
            buildConfigField "String", "AUTH_SECRET", devAuthSecret
        }
    }


}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

    compile project(':Q-municate_core')


    compile "com.android.support:multidex:${rootProject.multiDexVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.supportVersion}"
    compile "com.android.support:design:${rootProject.supportVersion}"

    compile "com.google.android.gms:play-services-base:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-gcm:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-maps:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-location:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-analytics:${rootProject.googlePlayServicesVersion}"

    compile "com.firebase:firebase-jobdispatcher-with-gcm-dep:${rootProject.firebaseDispatcherVersion}"
    compile "com.google.firebase:firebase-auth:${rootProject.firebaseAuthVersion}"
    compile "com.firebaseui:firebase-ui-auth:${rootProject.firebaseUiAuthVersion}"
    compile "com.google.firebase:firebase-messaging:${rootProject.firebaseVersion}"

    compile "com.nostra13.universalimageloader:universal-image-loader:${rootProject.universalImageLoaderVersion}"
    compile "com.jakewharton:butterknife:${rootProject.butterknifeVersion}"
    compile "com.afollestad.material-dialogs:core:${rootProject.materialDialogsVersion}"

    compile "com.github.orangegangsters:swipy:${rootProject.swipyRecyclerviewVersion}@aar"
    compile "com.timehop.stickyheadersrecyclerview:library:${rootProject.stickylistheadersRecyclerViewVersion}@aar"
    compile "com.rockerhieu.emojicon:library:${rootProject.emojiconVersion}"
    compile "com.soundcloud.android:android-crop:${rootProject.cropVersion}@aar"

    compile("com.android.support:cardview-v7:${rootProject.supportVersion}") {
        force = true
    }

    compile project(path: ':q-municate_user_service')
    compile project(path: ':q-municate_auth_service')
    compile project(path: ':q-municate_user_cache')


    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.flurry.android:analytics:6.2.0'
    testCompile 'junit:junit:4.12'
}

crashlytics {
    enableNdk false
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

apply plugin: 'com.google.gms.google-services'